/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_sv.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <24>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&kp ESC         &kp Q  &kp W  &kp E         &kp R      &kp T                                                       &kp Y              &kp U      &kp I          &kp O       &kp P            &kp SV_A_RING
&kp TAB         &kp A  &kp S  &kp D         &kp F      &kp G                                                       &kp H              &kp J      &kp K          &kp L       &kp SV_O_UMLAUT  &kp SV_A_UMLAUT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C         &kp V      &kp B         &none      &mo 1      &mo 2          &none    &kp N              &kp M      &kp COMMA      &kp SV_DOT  &kp MINUS        &kp RIGHT_SHIFT
                              &kp LEFT_ALT  &kp LCTRL  &kp LEFT_GUI  &kp SPACE  &kp ENTER  &kp BACKSPACE  &kp ESC  &kp DOUBLE_QUOTES  &kp RCTRL  &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        left {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&trans               &none           &kp UP          &none           &none                 &none                                                           &trans  &trans  &trans     &trans  &trans  &trans
&none                &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT       &kp EQUAL             &kp AMPERSAND                                                   &trans  &trans  &trans     &trans  &trans  &trans
&kp SV_LEFT_BRACKET  &kp LESS_THAN   &kp SV_SLASH    &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp APOS       &trans  &trans          &trans           &trans  &trans  &trans  &trans     &trans  &trans  &trans
                                                     &kp LCTRL       &trans                &trans         &trans  &kp LEFT_SHIFT  &kp RIGHT_SHIFT  &trans  &trans  &trans  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        right {
            bindings = <
&kp N0                &kp N1  &kp N2         &kp N3           &kp N4                 &kp N5                                                         &kp N6  &kp N7  &kp N8     &kp N9  &kp QUESTION  &trans
&none                 &none   &none          &none            &none                  &kp PIPE                                                       &trans  &trans  &trans     &trans  &trans        &trans
&kp SV_RIGHT_BRACKET  &kp GT  &kp BACKSLASH  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp SV_ACUTE  &trans  &trans          &trans           &trans  &trans  &trans  &trans     &trans  &trans        &trans
                                             &kp LCTRL        &trans                 &trans        &trans  &kp LEFT_SHIFT  &kp RIGHT_SHIFT  &trans  &trans  &trans  &kp RCTRL
            >;
        };
    };
};
